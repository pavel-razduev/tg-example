// GENERATED BY 'T'ransport 'G'enerator. DO NOT EDIT.
package transport

import (
	"tg-example/contracts"

	"github.com/gofiber/fiber/v2"
)

type httpExampleService struct {
	errorHandler     ErrorHandler
	maxBatchSize     int
	maxParallelBatch int
	svc              *serverExampleService
	base             contracts.ExampleService
}

func NewExampleService(svcExampleService contracts.ExampleService) (srv *httpExampleService) {

	srv = &httpExampleService{
		base: svcExampleService,
		svc:  newServerExampleService(svcExampleService),
	}
	return
}

func (http *httpExampleService) Service() *serverExampleService {
	return http.svc
}

func (http *httpExampleService) WithLog() *httpExampleService {
	http.svc.WithLog()
	return http
}

func (http *httpExampleService) WithTrace() *httpExampleService {
	http.svc.WithTrace()
	return http
}

func (http *httpExampleService) WithMetrics() *httpExampleService {
	http.svc.WithMetrics()
	return http
}

func (http *httpExampleService) WithErrorHandler(handler ErrorHandler) *httpExampleService {
	http.errorHandler = handler
	return http
}

func (http *httpExampleService) SetRoutes(route *fiber.App) {
	route.Post("/v1/exampleService", http.serveBatch)
	route.Post("/v1/exampleService/get", http.serveGet)
}
