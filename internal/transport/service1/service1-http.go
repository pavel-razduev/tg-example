// GENERATED BY 'T'ransport 'G'enerator. DO NOT EDIT.
package service1

import (
	"tg-example/contracts"

	"github.com/gofiber/fiber/v2"
)

type httpService1 struct {
	errorHandler     ErrorHandler
	maxBatchSize     int
	maxParallelBatch int
	svc              *serverService1
	base             contracts.Service1
}

func NewService1(svcService1 contracts.Service1) (srv *httpService1) {

	srv = &httpService1{
		base: svcService1,
		svc:  newServerService1(svcService1),
	}
	return
}

func (http *httpService1) Service() *serverService1 {
	return http.svc
}

func (http *httpService1) WithLog() *httpService1 {
	http.svc.WithLog()
	return http
}

func (http *httpService1) WithTrace() *httpService1 {
	http.svc.WithTrace()
	return http
}

func (http *httpService1) WithMetrics() *httpService1 {
	http.svc.WithMetrics()
	return http
}

func (http *httpService1) WithErrorHandler(handler ErrorHandler) *httpService1 {
	http.errorHandler = handler
	return http
}

func (http *httpService1) SetRoutes(route *fiber.App) {
	route.Post("/v1/service1", http.serveBatch)
	route.Post("/v1/service1/get", http.serveGet)
}
