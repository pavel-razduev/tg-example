// GENERATED BY 'T'ransport 'G'enerator. DO NOT EDIT.
package transport

import (
	"context"
	"fmt"
	"tg-example/contracts"
	"tg-example/contracts/types"

	otel "go.opentelemetry.io/otel"
	trace "go.opentelemetry.io/otel/trace"
)

type traceExampleService struct {
	next contracts.ExampleService
}

func traceMiddlewareExampleService(next contracts.ExampleService) contracts.ExampleService {
	return &traceExampleService{next: next}
}

func (svc traceExampleService) Get(ctx context.Context, req types.BaseRequest) (resp *types.BaseResponse, err error) {

	var span trace.Span
	ctx, span = otel.Tracer(fmt.Sprintf("tg:%s", VersionTg)).Start(ctx, "exampleService.get")
	defer func() {
		span.RecordError(err)
		span.End()
	}()
	return svc.next.Get(ctx, req)
}
